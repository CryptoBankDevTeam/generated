
syntax = "proto3";

import "aelf/core.proto";
import "aelf/options.proto";
import "transaction_fee.proto";
import "authority_info.proto";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "AElf.CryptoBankContract";

service CryptoBankContractContract {

    option (aelf.base) = "acs1.proto";
    option (aelf.csharp_state) = "CryptoBankContractContractState";

    rpc Initialize (InitializeInput) returns (google.protobuf.Empty) {
    }

    rpc SetTaxPoint (google.protobuf.Int64Value) returns (google.protobuf.Empty) {
    }

    rpc Withdraw (google.protobuf.Empty) returns (google.protobuf.Empty) {
    }

    rpc GetTax (google.protobuf.Empty) returns (google.protobuf.Int64Value) {
        option (aelf.is_view) = true;
    }

    rpc IsProjectBanned (google.protobuf.StringValue) returns (google.protobuf.BoolValue) {
        option (aelf.is_view) = true;
    }

    rpc Set (CryptoBankMessage) returns (google.protobuf.Empty) { }
    rpc Get (google.protobuf.Empty) returns (CryptoBankMessage) {
        option (aelf.is_view) = true;
    }
}

message CryptoBankMessage {
    string Value = 1;
}

message InitializeInput {
    aelf.Address owner = 1;
    string vote_symbol = 2;
    int64 basic_voting_unit = 3;
    int64 interval = 4;
}